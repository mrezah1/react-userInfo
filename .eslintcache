[{"D:\\Learn\\Programing\\Learn\\React\\frontcast\\Projects\\react-test\\src\\index.js":"1","D:\\Learn\\Programing\\Learn\\React\\frontcast\\Projects\\react-test\\src\\App.js":"2","D:\\Learn\\Programing\\Learn\\React\\frontcast\\Projects\\react-test\\src\\Timer\\index.js":"3"},{"size":154,"mtime":1610753238769,"results":"4","hashOfConfig":"5"},{"size":158,"mtime":1610977167490,"results":"6","hashOfConfig":"5"},{"size":876,"mtime":1610977167497,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"14oqmjh",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Learn\\Programing\\Learn\\React\\frontcast\\Projects\\react-test\\src\\index.js",[],["15","16"],"D:\\Learn\\Programing\\Learn\\React\\frontcast\\Projects\\react-test\\src\\App.js",[],"D:\\Learn\\Programing\\Learn\\React\\frontcast\\Projects\\react-test\\src\\Timer\\index.js",["17"],{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","severity":1,"message":"23","line":15,"column":15,"nodeType":"24","endLine":17,"endColumn":15},"no-native-reassign",["25"],"no-negated-in-lhs",["26"],"react-hooks/exhaustive-deps","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]